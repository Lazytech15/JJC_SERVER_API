{
  "name": "fetchdata",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "main": "electron/main.js",
  "homepage": "./",
  "description": "Electron app with Cloudflare tunnel for database access",
  "author": "Your Name",
  "scripts": {
    "start": "npm run build && concurrently --names \"SERVER,TUNNEL\" --prefix-colors \"blue,magenta\" \"npm run server\" \"npm run tunnel:wait-server\"",
    "dev": "concurrently --names \"SERVER,CLIENT\" --prefix-colors \"blue,green\" \"npm run server\" \"npm run client\"",
    "dev:public": "concurrently --names \"SERVER,CLIENT,TUNNEL\" --prefix-colors \"blue,green,magenta\" \"npm run server\" \"npm run client\" \"npm run tunnel:wait-server\"",
    "client": "vite --host 0.0.0.0",
    "server": "node server/index.js",
    "tunnel": "npm run build && node electron/tunnel-launcher.js",
    "tunnel:wait-server": "echo \"ðŸš‡ Waiting for server to be ready...\" && wait-on http://localhost:3001 --timeout 30000 --interval 1000 && echo \"âœ… Server ready! Starting Cloudflare Tunnel...\" && cloudflared tunnel --url http://localhost:3001",
    "tunnel:only": "echo \"ðŸš‡ Starting Cloudflare Tunnel...\" && cloudflared tunnel --url http://localhost:3001",
    "build": "vite build",
    "preview": "vite preview --port 4173 --host 0.0.0.0",
    "electron": "electron .",
    "electron:dev": "concurrently \"npm run server\" \"npm run client\" \"wait-on http://localhost:3001 && electron .\"",
    "electron:tunnel": "USE_TUNNEL=true electron .",
    "electron:build": "npm run build && electron-builder",
    "electron:build:win": "npm run build && electron-builder --win",
    "electron:build:win64": "npm run build && electron-builder --win --x64",
    "electron:build:win32": "npm run build && electron-builder --win --ia32",
    "electron:dist": "npm run build && electron-builder --publish=never",
    "electron:dist:win": "npm run build && electron-builder --win --publish=never",
    "electron:pack": "npm run build && electron-builder --dir",
    "postinstall": "electron-builder install-app-deps",
    "launch:production": "node electron/production-launcher.js",
    "electron:production": "NODE_ENV=production electron ."
  },
  "dependencies": {
    "concurrently": "^8.2.2",
    "cors": "^2.8.5",
    "express": "^4.19.2",
    "node-fetch": "^3.3.2",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-router-dom": "^7.8.1",
    "sqlite3": "^5.1.7"
  },
  "devDependencies": {
    "@tailwindcss/vite": "^4.1.12",
    "tailwindcss": "^4.1.9",
    "@eslint/js": "^9.33.0",
    "@types/react": "^19.1.10",
    "@types/react-dom": "^19.1.7",
    "@vitejs/plugin-react": "^5.0.0",
    "electron": "^37.3.1",
    "electron-builder": "^26.0.12",
    "eslint": "^9.33.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "vite": "^7.1.2",
    "wait-on": "^8.0.1"
  },
  "build": {
    "appId": "com.fetchdata.app",
    "productName": "FetchData",
    "directories": {
      "output": "dist-electron"
    },
    "files": [
      "dist/**/*",
      "server/**/*",
      "electron/**/*",
      "node_modules/sqlite3/**/*",
      "node_modules/express/**/*",
      "node_modules/cors/**/*",
      "node_modules/node-fetch/**/*",
      "node_modules/react/**/*",
      "node_modules/react-dom/**/*",
      "node_modules/react-router-dom/**/*",
      "node_modules/scheduler/**/*",
      "!node_modules/@tailwindcss/**/*",
      "!node_modules/@emnapi/**/*",
      "!node_modules/**/wasm32-wasi/**/*"
    ],
    "asarUnpack": ["node_modules/sqlite3/**/*"],
    "buildDependenciesFromSource": false,
    "extraResources": [
      {
        "from": "server",
        "to": "server"
      }
    ],
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": ["x64"]
        }
      ],
      "icon": "assets/icon.ico"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true
    }
  }
}
